#!/usr/bin/env bash

# Date        : 01-Mar-2020
# Author      : Francisco Sanchez Arroyo
# Description : This script installs all the packages required by mods
#               for debian/arch/fedora/(open)suse based distributions.
# Usage       : ./install-mods

# Copyright   : This work may be reproduced, modified, distributed, performed, and
#               displayed for any purpose, but must acknowledge the fab modules project.
#               Copyright is retained and must be preserved.
#               The work is provided as is; no warranty is provided,
#               and users accept all liability.


# Title
clear
echo "###########################"
echo "### mods install script ###"
echo "###########################"
read -p "Press ENTER to continue ..."


# Do not run as root
if ((`id -u`  == 0)); then
	  echo "Please DO NOT run this script as root"
	  exit 1
else
	  echo "Confirming installation script running as normal user ... OK"
fi

#Has the current user sudo rights?
if  groups ${USER} | grep -q '\bsudo\b' || groups ${USER} | grep -q '\bwheel\b' || groups ${USER} | grep -q '\badmin\b' ; then
	  echo "Super user privileges confirmed ......................... OK"
else
	>&2 echo "This script requires superuser privileges for a portion of the installation. Current user (${USER}) appears to lack superuser privileges. Make sure the current user (${USER}) belong to group 'sudo' (ubuntu et al.) or 'wheel' (arch et al.) or 'admin' (macOS et al.)"
	exit 1
fi

# Detecting MacOS
if [[ "$OSTYPE" == "darwin"* ]]; then
        # Mac OSX
	echo "MacOS Operating System detected"
	curl "https://nodejs.org/dist/latest/node-${VERSION:-$(wget -qO- https://nodejs.org/dist/latest/ | sed -nE 's|.*>node-(.*)\.pkg</a>.*|\1|p')}.pkg" > "$HOME/Downloads/node-latest.pkg" && sudo installer -store -pkg "$HOME/Downloads/node-latest.pkg" -target "/"


# Detecting linux distribution
elif [[ "$OSTYPE" == "linux-gnu"* ]]; then 
	echo "Linux Operating System detected. Guessing distribution ..."
	read -p "Press ENTER to continue ..."
	source /etc/os-release
        if [[ $ID_LIKE = debian || $ID = debian ]]; then
            echo "Running Debian-like distribution"
            sudo apt update
            sudo apt install curl
            curl -sL https://deb.nodesource.com/setup_14.x | sudo -E bash -
            sudo apt install nodejs python3 python3-pip libcups2-dev
            sudo ln -s /usr/bin/python3 /usr/bin/python
            sudo adduser $USER lp
            sudo adduser $USER dialout
        elif [[ $ID_LIKE = arch || $ID = arch ]]; then
            echo "Running Arch-like distribution"
            sudo pacman -Syu
            sudo pacman -S --needed curl wget nodejs python python-pip libcups
            sudo usermod -a -G lp $USER
            sudo usermod -a -G uucp $USER
        elif [[ $ID = fedora || $ID_LIKE = fedora || $ID_LIKE = 'rhel fedora' ]]; then
            echo "Running Fedora-like distribution"
            sudo dnf install -y curl gcc-c++ make
            curl -sL https://rpm.nodesource.com/setup_14.x | sudo -E bash -
            sudo dnf install nodejs
            sudo usermod -a -G lp $USER
            sudo usermod -a -G dialout $USER
        elif [[ $ID =~ ^opensuse || $ID_LIKE =~ ^suse ]]; then
            echo "Running Suse-like distribution"
            sudo zypper refresh
            sudo zypper -n install curl
            sudo zypper -n install wget
            sudo zypper -n install python3 python3-pip
            sudo zypper -n install nodejs
            sudo zypper -n install cups-devel
            sudo zypper -n install libcups2
            sudo ln -s /usr/bin/python3 /usr/bin/python
            sudo usermod -a -G lp $USER
            sudo usermod -a -G dialout $USER
        fi
else
    >&2 echo "I Cannot detect your Operating System. Install all packages manually. Exiting script..."
    exit 1
fi

read -p "Press ENTER to continue ..."

# Install for all distributions
pip3 uninstall serial
pip3 install --user websockets
pip3 install --user pyserial
sudo npm install -g http-server
cd js
npm install bufferutil
npm install utf-8-validate
npm install ws
npm install serialport
npm install node-gyp
npm install printer --build-from-source --force
npm install obs-websocket-js
# Ending script
cd ..
echo "Log out/in or reboot for the group permissions to take effect."
